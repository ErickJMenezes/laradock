#!/bin/sh

# Levanta o ambiente de desesnvolvimento
labchecap_dev_up()
{
    labchecap_use_env development

    docker-compose -f docker-compose-dev.yml up -d
}

# Levanta o ambiente de produção
labchecap_prod_up()
{
    labchecap_use_env production

    docker-compose -f docker-compose-prod.yml up -d
}

# Remove o .env e o substitui pelo novo .env
labchecap_use_env()
{
    env_file_suffix=$1

    # Se já existir um .env, remove.
    if [ -f ".env" ]; then
        rm .env
    fi

    # Copia o .env.* em um novo .env
    cp ".env.$env_file_suffix" .env
}

labchecap_down()
{
    docker-compose down
}

labchecap_print_help()
{
    echo "Labchecap docker:"
    echo ""
    echo "Options:"
    echo "up <env>          Levanta o ambiente."
    echo "                  'dev'           (Default) Levanta o ambiente de desenvlvimento."
    echo "                  'prod'          Levanta o ambiente de produção."
    echo ""
    echo "down              Derruba o ambiente."
    echo ""
    echo "env <nome>        Informa o .env do projeto."
    echo "                  'dev'           Carrega o env de desenvolvimento."
    echo "                  'prod'          Carrega o env de produção."
    echo ""
    echo "bash              Entra no terminal do workspace."
    echo ""
    echo "horizon:terminate Reinicia a fila do laravel-horizon"
    echo ""
    echo "status            Exibe os containers ativos."
    echo ""
    echo "logs <?serviço>   Exibe os logs de um serviço."
    echo ""
    echo "build <?serviço>  Reconstroi o container de um serviço."
    echo ""
    echo "help              Mostra essa mensagem (default)."
}

# Executa o bash do container do workspace
labchecap_bash()
{
    docker-compose exec -u laradock workspace bash
}

# Reinicia a fila do laravel-horizon
labchecap_horizon_terminate()
{
    docker-compose exec laravel-horizon php /var/www/projetoapoio/artisan horizon:terminate
}

# ------------ #
# Script start #
# ------------ #

command=$1

if [ -z $command ] || [ $command = "help" ]; then
    labchecap_print_help
    exit 0
elif [ $command = "up" ] && ([ "$2" = "dev" ] || [ -z $2 ]); then
    echo "Subindo ambiente de desenvolvimento...\n"
    labchecap_dev_up
    exit 0
elif [ $command = "up" ] && [ "$2" = "prod" ]; then
    echo "Subindo ambiente de produção...\n"
    labchecap_prod_up
    exit 0
elif [ $command = "env" ] && [ "$2" = "dev" ]; then
    echo "Criado env de desnvolvimento...\n"
    labchecap_use_env development
    exit 0
elif [ $command = "env" ] && [ "$2" = "prod" ]; then
    echo "Criado env de produção...\n"
    labchecap_use_env production
    exit 0
elif [ $command = "down" ]; then
    echo "Derrubando ambiente...\n"
    labchecap_down
    exit 0
elif [ $command = "bash" ]; then
    labchecap_bash
    exit 0
elif [ $command = "horizon:terminate" ]; then
    labchecap_horizon_terminate
    exit 0
elif [ $command = "status" ]; then
    docker-compose ps $2
    exit 0
elif [ $command = "logs" ]; then
    docker-compose logs $2
    exit 0
elif [ $command = "build" ]; then
    docker-compose build $2
    exit 0
else
    echo "Comando não reconhecido."
    labchecap_print_help
    exit 1
fi
